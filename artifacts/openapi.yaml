openapi: 3.0.0
info:
  title: Nexus API
  version: "0.75"
  description: API for managing chat conversations, documents, and internet searches.
servers:
  - url: /api
paths:
  /api/chat:
    post:
      summary: "Chat with the assistant"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - message
              properties:
                user_id:
                  type: string
                message:
                  type: string
                conversation_id:
                  type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply:
                    type: string
                  conversation_id:
                    type: string
        '400':
          description: "Missing user_id or message"
          content:
            application/json
        '500':
          description: "Internal server error"
          content:
            application/json
  /api/chat/conversations:
    get:
      summary: "Get list of conversations"
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "List of conversations"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "No conversations found"
          content:
            application/json
  /api/chat/conversation/{conversation_id}:
    get:
      summary: "Get a conversation"
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Conversation history"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Conversation not found or access denied"
          content:
            application/json
    delete:
      summary: "Delete a conversation"
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Conversation deleted successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Conversation not found or access denied"
          content:
            application/json
        '500':
          description: "Internal server error"
          content:
            application/json
  /api/chat/file:
    post:
      summary: "Upload a file to the conversation"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - user_id
                - conversation_id
                - file
              properties:
                user_id:
                  type: string
                conversation_id:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: "File content added successfully"
          content:
            application/json
        '400':
          description: "Missing user_id, conversation_id, or file"
          content:
            application/json
        '500':
          description: "Error processing file"
          content:
            application/json
  /api/chat/internet:
    post:
      summary: "Perform an internet search and add results to conversation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - question
                - conversation_id
              properties:
                user_id:
                  type: string
                question:
                  type: string
                conversation_id:
                  type: string
      responses:
        '200':
          description: "Internet search results added successfully"
          content:
            application/json
        '400':
          description: "Missing question, user_id, or conversation_id"
          content:
            application/json
        '404':
          description: "No relevant information found"
          content:
            application/json
        '500':
          description: "Failed to fetch search results"
          content:
            application/json
  /api/documents:
    get:
      summary: "Retrieve list of documents"
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "List of documents"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
    post:
      summary: "Upload a new document"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - user_id
                - file
              properties:
                user_id:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: "Document uploaded successfully"
          content:
            application/json
        '400':
          description: "Missing user_id or file"
          content:
            application/json
  /api/documents/{document_id}:
    get:
      summary: "Retrieve a specific document"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
    delete:
      summary: "Delete a document and all its versions"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
      responses:
        '200':
          description: "Document deleted successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '500':
          description: "Error deleting document"
          content:
            application/json
  /api/documents/{document_id}/versions:
    get:
      summary: "Get all versions of a document"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "List of document versions"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "No versions found"
          content:
            application/json
        '500':
          description: "Error retrieving document versions"
          content:
            application/json
  /api/documents/{document_id}/version/{version}:
    get:
      summary: "Retrieve a specific version of a document"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document version retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
    delete:
      summary: "Delete a specific version of a document"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
      responses:
        '200':
          description: "Document version deleted successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '500':
          description: "Error deleting document version"
          content:
            application/json
  /api/documents/{document_id}/chunks:
    get:
      summary: "Get chunks of the latest version of a document"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Chunks retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "No chunks found"
          content:
            application/json
        '500':
          description: "Error retrieving chunks"
          content:
            application/json
  /api/documents/{document_id}/version/{version}/chunks:
    get:
      summary: "Get chunks of a specific document version"
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Chunks retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "No chunks found"
          content:
            application/json
        '500':
          description: "Error retrieving chunks"
          content:
            application/json
  /api/documents/search:
    post:
      summary: "Search document chunks"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - query
              properties:
                user_id:
                  type: string
                query:
                  type: string
                top_n:
                  type: integer
                  default: 5
      responses:
        '200':
          description: "Search results retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id or query"
          content:
            application/json
        '500':
          description: "Error during search"
          content:
            application/json
  /api/workflows:
    get:
      summary: "Get all workflows for a user"
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Workflows retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '500':
          description: "Error retrieving workflows"
          content:
            application/json
    post:
      summary: "Create a new workflow"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - name
              properties:
                user_id:
                  type: string
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: "Workflow created successfully"
          content:
            application/json
        '400':
          description: "Missing user_id or name"
          content:
            application/json
        '500':
          description: "Error creating workflow"
          content:
            application/json
  /api/workflows/{workflow_id}:
    get:
      summary: "Retrieve a specific workflow"
      parameters:
        - name: workflow_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Workflow retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Workflow not found"
          content:
            application/json
        '500':
          description: "Error retrieving workflow"
          content:
            application/json
    put:
      summary: "Update a workflow"
      parameters:
        - name: workflow_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: "Workflow updated successfully"
          content:
            application/json
        '400':
          description: "Invalid update data"
          content:
            application/json
        '404':
          description: "Workflow not found"
          content:
            application/json
        '500':
          description: "Error updating workflow"
          content:
            application/json
    delete:
      summary: "Delete a workflow"
      parameters:
        - name: workflow_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
      responses:
        '200':
          description: "Workflow deleted successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '500':
          description: "Error deleting workflow"
          content:
            application/json
  /api/workflows/{workflow_id}/execute:
    post:
      summary: "Execute a workflow"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
      responses:
        '200':
          description: "Workflow executed successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Workflow not found"
          content:
            application/json
  /api/workflows/{workflow_id}/executions/{id}:
    get:
      summary: "Get execution status of a workflow"
      parameters:
        - name: workflow_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Execution status retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Execution not found"
          content:
            application/json
        '500':
          description: "Error retrieving execution status"
          content:
            application/json
  /api/workflows/{workflow_id}/executions/{id}/result:
    get:
      summary: "Get execution result of a workflow"
      parameters:
        - name: workflow_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Execution result retrieved successfully"
          content:
            application/json
        '400':
          description: "Missing user_id"
          content:
            application/json
        '404':
          description: "Execution not found"
          content:
            application/json
        '500':
          description: "Error retrieving execution result"
          content:
            application/json
  /api/workflows/{workflow_id}/actions:
    post:
      summary: "Add actions to a workflow"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - actions
              properties:
                user_id:
                  type: string
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - action_id
                    properties:
                      action_id:
                        type: string
                      parameters:
                        type: object
      responses:
        '200':
          description: "Actions added successfully"
          content:
            application/json
        '400':
          description: "Missing user_id or invalid actions list"
          content:
            application/json
        '500':
          description: "Error adding actions to workflow"
          content:
            application/json
  /api/action:
    post:
      summary: "Create an action"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                # Define action properties as needed
      responses:
        '201':
          description: "Action created successfully"
          content:
            application/json
